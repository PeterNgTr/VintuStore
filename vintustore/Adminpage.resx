<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAABR/m4AUT5uAFD+bgBQfi4AUD4uAE++LgBPfi4ATz3uAE897gBOve4ATn3uAE397gBN/e4ATb3uAE1
        97gBNfe4ATX3uAEz9bgBM/W4ATL1uAEy9bgBMfW4ATH1uAEx9bgBMfW4ATH1uAEx9bgBMvW4ATL1uAEy
        9bgBM/W4ATP3uAFE+bgBQ/m4AUH4uAFA+LgBPvi4AT34uAE897gBOve4ATn3uAE397gBN/e4ATb3uAE1
        97gBNfe4ATP3uAEy9bgBMvW4ATH1uAEx9bgBMfW4ATH1uAEv9bgBL/W4AS/1uAEv9bgBL/W4AS/1uAEx
        9bgBMfW4ATH1uAEx9bgBMfW4AUP5uAFB+LgBQPi4AT74uAE997gBPPe4ATr3uAE597gBN/e4ATb3uAE1
        97gBNfe4ATP1uAEy9bgBMfW4ATH1uAEx9bgBL/W4AS71uAEu9LgBLPS4ASz0uAEs9LgBLPS4ASz0uAEs
        9LgBLPS4ASz0uAEu9LgBLvS4AS/1uAEx9bgBQfi4AUD4uAE++LgBPfe4ATz3uAE697gBOfe4ATf3uAE2
        97gBNfe4ATP3uAEy9bgBMfW4ATH1uAEv9bgBLvW4AS70uAEs9LgBLPS4ASz0uAEr9LgBK/S4ASv0uAEr
        9LgBK/S4ASv0uAEr9LgBK/S4ASz0uAEs9LgBLPS4ASz0uAFA+LgBPvi4AT33uAE897gBOve4ATf3uAE3
        97gBNve4ATX3uAEz9bgBMvW4ATH1uAEv9bgBLvW4ASz0uAEs9LgBLPS4ASv0uAEq9LgBKvO4ASrzuAEq
        87gBKvO4ASrzuAEq87gBKvO4ASrzuAEq87gBKvO4ASr0uAEr9LgBK/S4AT74uAE9+LgBPPe4ATr3uAE3
        97gBN/e4ATX3uAE197gBM/W4ATH1uAEx9bgBL/W4ASz0uAEs9LgBLPS4ASr0uAEq87gBKvO4ASjzuAEo
        87gBJ/O4ASfzuAEn87gBJ/O4ASfzuAEn87gBJ/O4ASfzuAEo87gBKPO4ASrzuAEq87gBPfi4ATz3uAE6
        97gBN/e4ATf3uAE197gBNfe4ATL1uAEx9bgBMfW4AS70uAEs9LgBLPS4ASv0uAEq87gBKvO4ASjzuAEn
        87gBJfO4ASXzuAEl87gBJfO4ASXzuAEk87gBJPO4ASXzuAEl87gBJfO4ASXzuAEl87gBJ/O4ASfzuAE8
        97gBOve4ATn3uAE397gBNfe4ATX3uAEy9bgBMfW4AS/1uAEu9LgBLPS4ASv0uAEq9LgBKvO4ASjzuAEn
        87gBJfO4ASXzuAEk87gBJPO4ASPzuAEj87gBI/O4ASPzuAEj87gBI/O4ASPzuAEj87gBI/O4ASTzuAEl
        87gBJfO4ATz3uAE597gBN/e4ATb3uAE197gBM/W4ATH1uAEv9bgBLvS4ASz0uAEr9LgBKvO4ASjzuAEn
        87gBJfO4ASXzuAEk87gBI/O4ASPzuAEj87gBIfO4ASHzuAEg87gBIPO4ASDzuAEg87gBIfO4ASHzuAEh
        87gBI/O4ASPzuAEk87gBOve4ATf3uAE297gBNfe4ATP1uAEx9bgBMfW4AS70uAEs9LgBK/S4AA9Y4AAO
        WOAADljgASXzuAEk87gBI/O4ASPzuAEh87gBIPO4ASDxuAEe8bgADGbbAApX4AAKV+AAClfgABjEwgEe
        8bgBHvG4ASDxuAEg8bgBIfO4ASPzuAE597gBN/e4ATX3uAEz97gBMvW4ATH1uAEu9LgBLPS4ASv0uAAP
        WOAADljgAA1Y4AANWOAADVjgASPzuAEh87gBIPO4AR7xuAEe8bgBHvG4AR3xuAEd8bgACVfgAAlX4AAJ
        V+ABHPG4ARzxuAEd8bgBHfG4AR7xuAEe8bgBIPG4ATf3uAE297gBNfe4ATL1uAEx9bgBL/W4ASz0uAEr
        9LgBKvO4AA5Y4AANWOAADVjgAA1Y4AANWOABIfO4ASDxuAEe8bgBHfG4ARzxuAEc8bgAGvC4ABrwuAAJ
        V+AACVfgAAlX4AAa8LgAGvC4ABrwuAEa8bgBHPG4AR3xuAEe8bgBN/e4ATX3uAEz9bgBMfW4AS/1uAEs
        9LgBLPS4ASr0uAAOWOAADljgAA1Y4AAcw8IADVjgAAtY4AAKV+ABHvG4AR3xuAEc8bgAGvC4ABrwuAAZ
        8LgAGPC4AAhX4AAIV+AACFfgABjwuAAY8LgAGfC4ABnwuAAa8LgAGvC4ARzxuAE297gBNfe4ATL1uAEx
        9bgBLvS4ASz0uAEq9LgBKvO4AA5Y4AANWOAADVjgASPzuAALWOAAClfgAApX4AEc8bgAGvC4ABrwuAAZ
        8LgAGPC4ABjwuAAW7rgACFXgAAhV4AAIVeAAFu64ABbuuAAY7rgAGPC4ABjwuAAZ8LgAGvC4ATX3uAEz
        9bgBMfW4AS/1uAEs9LgBK/S4ASrzuAAOWOAADVjgAA1Y4AAh8LgBIfO4AR7xuAAKV+AACVfgAAlX4AAZ
        8LgAGPC4ABjuuAAW7rgAFe64ABPuuAAHVeAAB1XgAAdV4AAT7rgAE+64ABXuuAAV7rgAFu64ABjwuAAZ
        8LgBNfe4ATL1uAEx9bgBLvS4ASz0uAEq9LgBKvO4AA5Y4AANWOAADVjgASHzuAEe8bgBHvG4AAlX4AAJ
        V+AACFfgABbouQAW7rgAFe64ABPuuAAT7rgAEu64AAZV4AAGVeAABlXgABLuuAAS7rgAE+64ABPuuAAV
        7rgAFu64ABjwuAEz97gBMvW4AS/1uAEs9LgBLPS4ASrzuAAOWOAADVjgAA1Y4AEj87gBIPG4AR7xuAEd
        8bgAGvC4AAhX4AAIV+AACFXgABPuuAAT7rgAEu64ABHuuAAR7rgABlXgAAVV4AAFVeAAEe64ABHuuAAR
        7rgAEu64ABPuuAAT7rgAFe64ATP1uAEx9bgBL/W4ASz0uAEr9LgAJuK7AA5Y4AANWOAADVjgASHzuAEe
        8bgBHfG4ARzxuAAa8LgACFzeAAhV4AAHVeAAEMfAABLuuAAR7rgAD+64AA7uuAADVeAAA1XgAANV4AAM
        7rgADu64AA/uuAAR7rgAEe64ABPuuAAT7rgBMvW4ATH1uAEu9LgBLPS4ASr0uAAOWOAADVjgAA1Y4AEj
        87gBIPO4AR7xuAEc8bgAGvC4ABnwuAAY7rgAB1XgAAdV4AAGVeAAEe64AA/uuAAM7rgADO24AANV4AAD
        VeAAA1XgAAvtuAAM7bgADO24AA7uuAAR7rgAEe64ABPuuAEy9bgBMfW4AS70uAEs9LgAGZLOAA5Y4AAN
        WOAADVjgASPzuAEg8bgBHfG4ARzxuAAa8LgAGPC4ABbuuAAHVeAABlXgAAZV4AAGcdcADO24AAztuAAK
        7bgAA1XgAAJV4AACVeAACO24AArtuAAL7bgADO24AA7uuAAR7rgAEe64ATL1uAEv9bgBLPS4ASv0uAAP
        WOAADljgAA1Y4AEj87gBIfO4AR7xuAEd8bgAGvC4ABnwuAAY7rgAFe64AA6/wgACI/EAASPxAAEj8QAD
        VeAAA1XgAAJV4AACVeAAAlXgAAJV4AACVeAAAlXgAANV4AADVeAAA1XgAA/uuAAR7rgBMfW4AS/1uAEs
        9LgAD1jgAA9Y4AAOWOAADVjgASPzuAEh87gBHvG4ARzxuAAa8LgAGPC4ABbuuAAT7rgADajIAAIj8QAB
        I/EAASPxAAEj8QACVeAAAlXgAAFV4AABVeAAAVXgAAFV4AABVeAAAlXgAANV4AADVeAADu64ABHuuAEx
        9bgBL/W4ACnluwAp5LsAJuS7ACPiuwAi4rsAH+G7ASDzuAEe8bgBHPG4ABrwuAAY8LgAFu64ABPuuAAQ
        3rsADdG+AAzRvgAL0L4ACNC+AAfduwAEzL8AA8y/AAHMvwABzL8AA8y/AAS7wwAFu8MAB7vDAAi7wwAM
        7bgAD+64ATH1uAEv9bgBLPS4ASv0uAEq87gBJfO4ASXzuAEj87gBIPO4AR7xuAEc8bgAGvC4ABjwuAAW
        7rgAE+64ABLuuAAR7rgADO64AAvtuAAI7bgAB+y4AAbsuAAD7LgAAOy4AADsuAAB7LgABOy4AAbsuAAI
        7bgACu24AAztuAAP7rgBMfW4AS/1uAEs9LgBK/S4ASrzuAEl87gBJfO4ASPzuAEg87gBHvG4ARzxuAAa
        8LgAGPC4ABbuuAAT7rgAEu64AA/uuAAM7rgAC+24AAjtuAAH7LgABuy4AAPsuAAA7LgAAOy4AAHsuAAE
        7LgABuy4AAjtuAAK7bgADO24AA/uuAEx9bgBL/W4ASz0uAEr9LgBKvO4ASfzuAEl87gBI/O4ASDzuAEe
        8bgBHPG4ABrwuAAY8LgAFu64ABPuuAAS7rgAEe64AA7uuAAM7bgACu24AAfsuAAG7LgABOy4AAPsuAAD
        7LgAA+y4AAbsuAAH7LgACO24AAvtuAAM7bgAD+64ATH1uAEv9bgBLPS4ASv0uAEq87gBJ/O4ASXzuAEj
        87gBIfO4AR7xuAEc8bgAGvC4ABjwuAAW7rgAE+64ABLuuAAR7rgADu64AAztuAAK7bgACO24AAfsuAAG
        7LgABOy4AATsuAAG7LgABuy4AAjsuAAK7bgADO24AA7uuAAR7rgBMvW4AS/1uAEs9LgBK/S4ASrzuAEn
        87gBJfO4ASPzuAEh87gBHvG4AR3xuAAa8LgAGfC4ABjuuAAV7rgAE+64ABHuuAAP7rgADO64AAztuAAK
        7bgACO24AAfsuAAH7LgAB+y4AAfsuAAI7LgACu24AAvtuAAM7bgAD+64ABHuuAEy9bgBMfW4AS70uAEs
        9LgBKvO4ASfzuAEl87gBI/O4ASPzuAEe8bgBHfG4ARzxuAAZ8LgAGPC4ABbuuAAT7rgAEu64ABHuuAAP
        7rgADO24AAztuAAK7bgACO24AAjtuAAI7bgACO24AArtuAAL7bgADO24AA7uuAAR7rgAEu64ATL1uAEx
        9bgBLvS4ASz0uAEq9LgBKPO4ASXzuAEk87gBI/O4ASDxuAEe8bgBHPG4ABrwuAAZ8LgAGO64ABXuuAAT
        7rgAEu64ABHuuAAP7rgADO24AAztuAAM7bgAC+24AAvtuAAL7bgADO24AAztuAAO7rgAEe64ABHuuAAT
        7rgBM/W4ATH1uAEv9bgBLPS4ASv0uAEq87gBJ/O4ASXzuAEj87gBIfO4AR7xuAEd8bgAGvC4ABnwuAAY
        8LgAFu64ABPuuAAT7rgAEu64ABHuuAAP7rgADu64AAzuuAAM7bgADO24AAzuuAAO7rgAD+64ABHuuAAR
        7rgAEu64ABPuuAEz97gBMvW4AS/1uAEs9LgBLPS4ASrzuAEo87gBJfO4ASTzuAEj87gBIPG4AR7xuAEc
        8bgAGvC4ABnwuAAY8LgAFu64ABPuuAAT7rgAEu64ABHuuAAR7rgAEe64AA/uuAAP7rgAD+64ABHuuAAR
        7rgAEu64ABPuuAAT7rgAFu64AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>